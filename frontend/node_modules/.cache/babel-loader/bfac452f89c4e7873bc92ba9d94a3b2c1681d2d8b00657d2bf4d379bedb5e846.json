{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prince\\\\Desktop\\\\myReactProjects\\\\react-router-project\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n  ;\n  return redirect('/events');\n}\n;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","NewEventPage","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","message"],"sources":["C:/Users/Prince/Desktop/myReactProjects/react-router-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import EventForm from '../components/EventForm';\r\nimport { json, redirect } from 'react-router-dom';\r\n\r\nconst NewEventPage = () => {\r\n    return <EventForm />\r\n};\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({request, params}) {\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description'),\r\n    };\r\n\r\n    const response = await fetch('http://localhost:8080/events',{\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if(response.status === 422){\r\n        return response\r\n    }\r\n\r\n    if(!response.ok){\r\n        throw json({message: 'Could not save event'}, {\r\n            status: 500\r\n        });\r\n    };\r\n\r\n   return redirect('/events');\r\n};"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAElD,MAAMC,YAAY,GAAG,MAAM;EACvB,oBAAO,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AACxB,CAAC;AAAC,KAFIA,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeC,MAAM,OAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC;EAC1C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACvB,OAAOP,QAAQ;EACnB;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACZ,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAAsB,CAAC,EAAE;MAC1CF,MAAM,EAAE;IACZ,CAAC,CAAC;EACN;EAAC;EAEF,OAAOpB,QAAQ,CAAC,SAAS,CAAC;AAC7B;AAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}