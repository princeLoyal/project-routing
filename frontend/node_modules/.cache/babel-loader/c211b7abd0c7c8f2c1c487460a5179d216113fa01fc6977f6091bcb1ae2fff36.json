{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prince\\\\Desktop\\\\myReactProjects\\\\react-router-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  // const events = data.events;\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\n;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: ' Could not fetch events'\n    }), {\n      status: 500\n    };\n  } else {\n    return response;\n  }\n  ;\n};\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","Suspense","EventsList","EventsPage","events","loadedEvent","loadEvents","response","fetch","ok","message","status","loader"],"sources":["C:/Users/Prince/Desktop/myReactProjects/react-router-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await} from 'react-router-dom';\r\nimport { Suspense } from 'react';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const { events } = useLoaderData();\r\n\r\n  // if(data.isError){\r\n  //   return <p>{data.message}</p>\r\n  // }\r\n  // const events = data.events;\r\n  \r\n  return (\r\n    <Suspense>\r\n    <Await resolve={events}>\r\n    {  (loadedEvent) => <EventsList events={loadedEvent}/> }\r\n    </Await>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n\r\nconst loadEvents = async () => {\r\n  const response = await fetch('http://localhost:8080/events');\r\n  if (!response.ok) {\r\n    throw json({message:' Could not fetch events'}), \r\n    { status: 500}\r\n  } else {\r\n   return response;\r\n  };\r\n};\r\n\r\nexport function loader (){\r\n  defer({\r\n    events: loadEvents(),\r\n  });\r\n };"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAO,kBAAkB;AACnE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAElD,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,EAAE;;EAElC;EACA;EACA;EACA;;EAEA,oBACE,QAAC,QAAQ;IAAA,uBACT,QAAC,KAAK;MAAC,OAAO,EAAEO,MAAO;MAAA,UACnBC,WAAW,iBAAK,QAAC,UAAU;QAAC,MAAM,EAAEA;MAAY;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EAC9C;IAAA;IAAA;IAAA;EAAA,QACG;AAEf;AAAC,GAfQF,UAAU;EAAA,QACEN,aAAa;AAAA;AAAA,KADzBM,UAAU;AAelB;AAED,eAAeA,UAAU;AAEzB,MAAMG,UAAU,GAAG,YAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMX,IAAI,CAAC;MAACY,OAAO,EAAC;IAAyB,CAAC,CAAC,EAC/C;MAAEC,MAAM,EAAE;IAAG,CAAC;EAChB,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;EAAC;AACH,CAAC;AAED,OAAO,SAASK,MAAM,GAAG;EACvBb,KAAK,CAAC;IACJK,MAAM,EAAEE,UAAU;EACpB,CAAC,CAAC;AACH;AAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}