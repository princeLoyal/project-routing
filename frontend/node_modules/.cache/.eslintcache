[{"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\index.js":"1","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\App.js":"2","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\reportWebVitals.js":"3","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\MainPage.js":"4","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\CreateAccount.js":"5","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Footer.js":"6","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Header.js":"7","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Transaction.js":"8","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Withdraw.js":"9","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\HandlePayment.js":"10","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Full-Transaction-List\\FullTransactionList.js":"11","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\Login.js":"12","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\TransactionList.js":"13","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Input.js":"14","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Button.js":"15","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\PaymentDetails.js":"16","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\ModalPaymentDetails.js":"17","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\PaymentResult.js":"18","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Modals\\Modal.js":"19","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Modals\\AddTransactionModal.js":"20","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Profile.js":"21","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\LoginAndCreateAcc.js":"22","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\index.js":"23","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\App.js":"24","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Shop\\Products.js":"25","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\Cart.js":"26","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Layout\\Layout.js":"27","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Shop\\ProductItem.js":"28","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\CartItem.js":"29","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Layout\\MainHeader.js":"30","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\UI\\Card.js":"31","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\CartButton.js":"32","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\index.js":"33","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\UI\\Notification.js":"34","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\cart-actions.js":"35","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\cart-slice.js":"36","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\ui-slice.js":"37","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\index.js":"38","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\App.js":"39","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\HomePage.js":"40","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EventsPage.js":"41","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EventDetailPage.js":"42","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\NewEventPage.js":"43","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EditEventPage.js":"44","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\MainNavigation.js":"45","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\RootLayout.js":"46","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsNavigation.js":"47","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsRoot.js":"48","C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsList.js":"49"},{"size":552,"mtime":1674688609497,"results":"50","hashOfConfig":"51"},{"size":2664,"mtime":1675112382365,"results":"52","hashOfConfig":"51"},{"size":375,"mtime":1674688609497,"results":"53","hashOfConfig":"51"},{"size":3840,"mtime":1674855917055,"results":"54","hashOfConfig":"51"},{"size":4807,"mtime":1675195206484,"results":"55","hashOfConfig":"51"},{"size":1323,"mtime":1674852749674,"results":"56","hashOfConfig":"51"},{"size":1685,"mtime":1674803549710,"results":"57","hashOfConfig":"51"},{"size":1846,"mtime":1674803549716,"results":"58","hashOfConfig":"51"},{"size":3267,"mtime":1674859768125,"results":"59","hashOfConfig":"51"},{"size":2621,"mtime":1674805969671,"results":"60","hashOfConfig":"51"},{"size":3324,"mtime":1674804499567,"results":"61","hashOfConfig":"51"},{"size":1717,"mtime":1675070679551,"results":"62","hashOfConfig":"51"},{"size":2158,"mtime":1674762141805,"results":"63","hashOfConfig":"51"},{"size":367,"mtime":1674859388962,"results":"64","hashOfConfig":"51"},{"size":345,"mtime":1674688609465,"results":"65","hashOfConfig":"51"},{"size":5910,"mtime":1674857041409,"results":"66","hashOfConfig":"51"},{"size":1088,"mtime":1674749041584,"results":"67","hashOfConfig":"51"},{"size":1694,"mtime":1674749041583,"results":"68","hashOfConfig":"51"},{"size":1257,"mtime":1674749073925,"results":"69","hashOfConfig":"51"},{"size":1179,"mtime":1674750279203,"results":"70","hashOfConfig":"51"},{"size":2392,"mtime":1674852749678,"results":"71","hashOfConfig":"51"},{"size":848,"mtime":1675084549257,"results":"72","hashOfConfig":"51"},{"size":303,"mtime":1675265842927,"results":"73","hashOfConfig":"74"},{"size":1267,"mtime":1675591117609,"results":"75","hashOfConfig":"74"},{"size":786,"mtime":1675327162089,"results":"76","hashOfConfig":"74"},{"size":695,"mtime":1675589578596,"results":"77","hashOfConfig":"74"},{"size":233,"mtime":1648646844000,"results":"78","hashOfConfig":"74"},{"size":821,"mtime":1675590910300,"results":"79","hashOfConfig":"74"},{"size":1127,"mtime":1675590910300,"results":"80","hashOfConfig":"74"},{"size":361,"mtime":1648646844000,"results":"81","hashOfConfig":"74"},{"size":244,"mtime":1648646844000,"results":"82","hashOfConfig":"74"},{"size":580,"mtime":1675591227959,"results":"83","hashOfConfig":"74"},{"size":252,"mtime":1675590956214,"results":"84","hashOfConfig":"74"},{"size":512,"mtime":1675331177977,"results":"85","hashOfConfig":"74"},{"size":2063,"mtime":1675591311435,"results":"86","hashOfConfig":"74"},{"size":1477,"mtime":1675591092004,"results":"87","hashOfConfig":"74"},{"size":543,"mtime":1675590983374,"results":"88","hashOfConfig":"74"},{"size":255,"mtime":1673880544000,"results":"89","hashOfConfig":"90"},{"size":2333,"mtime":1675911482534,"results":"91","hashOfConfig":"90"},{"size":91,"mtime":1675705527913,"results":"92","hashOfConfig":"90"},{"size":278,"mtime":1675911738725,"results":"93","hashOfConfig":"90"},{"size":271,"mtime":1675905084405,"results":"94","hashOfConfig":"90"},{"size":104,"mtime":1675705110094,"results":"95","hashOfConfig":"90"},{"size":107,"mtime":1675705295730,"results":"96","hashOfConfig":"90"},{"size":593,"mtime":1675759819407,"results":"97","hashOfConfig":"90"},{"size":247,"mtime":1675759336403,"results":"98","hashOfConfig":"90"},{"size":685,"mtime":1675910254354,"results":"99","hashOfConfig":"90"},{"size":257,"mtime":1675910615846,"results":"100","hashOfConfig":"90"},{"size":618,"mtime":1673880544000,"results":"101","hashOfConfig":"90"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"xhdgqp",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"8bh2xc",{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"uau57j",{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\index.js",[],[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\App.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\reportWebVitals.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\MainPage.js",["262"],[],"import { Fragment, useState, useContext } from \"react\";\r\nimport plus from '../../assests/Frame 1000001199.png';\r\n\r\nimport Header from \"./Header\";\r\nimport Profile from './Profile';\r\nimport Transaction from \"./Transaction/Transaction\";\r\nimport TransactionList from \"./Transaction/Full-Transaction-List/FullTransactionList\";\r\nimport Footer from './Footer';\r\nimport classes from './MainPage.module.css';\r\nimport AddTransactionModal from '../UI/Modals/AddTransactionModal';\r\nimport HandlePayment from \"./Transaction/paymentHandler/HandlePayment\";\r\nimport Withdraw from '../main-page/Transaction/Withdraw';\r\n\r\nconst MainPage = () => {\r\n    const [showProfile, setShowProfile] = useState(false);\r\n    const [focusedFooter, setFocusedFooter] = useState('home');\r\n    const [showFullTranList, setShowFullTranList] = useState(false);\r\n    const [showWithdraw, setShowWithdraw] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showMainPage, setShowMainPage] = useState(true);\r\n    const [showHandlePayment, setShowHandlePayment] = useState({ bool: false, type: ''});\r\n   \r\n    const showModalHandler = bool => {\r\n        setShowModal(bool);\r\n    };\r\n\r\n    const showWithdrawHandler = bool => {\r\n        setShowMainPage(!bool);\r\n        setShowWithdraw(bool);\r\n    }\r\n    const clickPaymentHandler = (bool, type) => {\r\n        setShowMainPage(!bool);\r\n        setShowModal(bool);\r\n        setShowHandlePayment( prevState => {\r\n            return {\r\n                bool: bool,\r\n                type: type\r\n            };\r\n        });\r\n    };\r\n    const goDashBoardHandler = () => {\r\n        setShowMainPage(true);\r\n    }\r\n    const showFullTranListHandler = (bool, page) => {\r\n        setShowMainPage(!bool);\r\n        setShowFullTranList(bool);\r\n        setFocusedFooter(page);\r\n    }\r\n    const footerButtonClickHandler = page => {\r\n        if(page === 'home'){\r\n            setShowMainPage(true);\r\n            setShowFullTranList(false);\r\n            setShowProfile(false);\r\n            setFocusedFooter(page);\r\n        } else if(page === 'transaction'){\r\n            setShowMainPage(false);\r\n            setShowFullTranList(true);\r\n            setShowProfile(false);\r\n            setFocusedFooter(page);\r\n        } else if(page === 'profile'){\r\n            setShowMainPage(false);\r\n            setShowFullTranList(false);\r\n            setShowProfile(true);\r\n            setFocusedFooter(page);\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            { showProfile && <Profile /> }\r\n            {showWithdraw && <Withdraw onClose={showWithdrawHandler}/>}\r\n            {!showMainPage && showHandlePayment.bool && !showWithdraw && <HandlePayment onClose={clickPaymentHandler} dashBoard={goDashBoardHandler} type={showHandlePayment.type}/>}\r\n             \r\n             { showMainPage && !showFullTranList && <div className={classes['main-page-div']}>\r\n                <p className={classes.imgStyle} onClick={() => showModalHandler(true)}>\r\n                    <img src={plus} alt='Add transaction' width='100'/>\r\n                </p>\r\n                <header>\r\n                    <Header />\r\n                </header> \r\n                <main>\r\n                <Transaction showModal={showModalHandler} showWithdraw={showWithdrawHandler} showFullTran={showFullTranListHandler}/>\r\n                { showModal && <AddTransactionModal onClose={showModalHandler} onClickPayment = {clickPaymentHandler}/>}\r\n                </main> </div>}\r\n                { showFullTranList && <TransactionList onClose={showFullTranListHandler}/> }\r\n                {!showWithdraw && !showHandlePayment.bool && <footer className={classes.footer}>\r\n                <Footer focus={focusedFooter} clickHandler={footerButtonClickHandler}/>\r\n                </footer> }\r\n        </Fragment>\r\n    );\r\n};\r\nexport default MainPage;\r\n","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\CreateAccount.js",["263","264","265","266","267","268","269","270"],[],"import { Fragment, useState, useRef } from 'react';\r\nimport classes from './CreateAccount.module.css';\r\n\r\nimport email from '../../assests/circum_mail.jpg';\r\nimport hide from '../../assests/Eye, Hidden.png';\r\nimport phone from '../../assests/mdi-light_phone.png';\r\nimport password from '../../assests/ph_lock-light.png';\r\nimport referal from '../../assests/ph_user-light.png';\r\n\r\nconst CreateAccount = props => {\r\n   const [EmailValid, setEmailValid] = useState();\r\n   const userName = useRef();\r\n   const userEmail = useRef();\r\n   const userPassword = useRef();\r\n   const confirmPassword = useRef();\r\n   const userPhone = useRef();\r\n   const accountCreationHandler = event => {\r\n      event.preventDefault();\r\n      const userData = {\r\n         // name: userName.current.value,\r\n         // phone: userPhone.current.value,\r\n         // email: userEmail.current.value,\r\n         // password: userPassword.current.value,\r\n         // password_confirmation: confirmPassword.current.value,\r\n         name: 'Thompson Onuoha',\r\n         phone: '09015695508',\r\n         email: 'princeloyal1234@gmail.com',\r\n         password: 'gmail',\r\n         password_confirmation: 'gmail',\r\n      };\r\n      const databaseHandler = async() => {\r\n         const url = 'http://167.172.181.74:9011/api/auth/register';\r\n         const options = {\r\n            method: 'POST', \r\n            headers: {\r\n               'Accept': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData),\r\n            redirect: 'follow'\r\n         };\r\n        const response = await fetch(url, options);\r\n        const data = await response.text();\r\n        console.log(data);\r\n     };\r\n      \r\n      databaseHandler();\r\n      //localStorage.setItem('loggedIn', 1);\r\n      //alert(\"Your logged in status has been saved. You won't need to log when the page refreshes\");\r\n      //props.onLogin();\r\n   };\r\n\r\nconst loginButtonClickHandler = () => {\r\n   props.onClickLogIn();\r\n}\r\nconst emailVerify = async() => {\r\n   const response = await fetch('http://167.172.181.74:9011/api/auth/register');\r\n   const data = await response.json();\r\n   alert(data);\r\n   //for(const key in data){\r\n    //  if(userEmail.current.value === data[key].email){\r\n       // alert('This email has already been used. Kindly log in');\r\n      //  props.onClickLogIn();\r\n       // return;\r\n    //  };\r\n //  };\r\n};\r\n    return <Fragment>\r\n           <main>\r\n            <header className={classes['create-account-header']}>\r\n              <h1>Create Your Account </h1>\r\n              <p>Pay by transfer</p>\r\n           </header>\r\n           <form className={classes['create-account-form']} onSubmit={accountCreationHandler}>\r\n              <label htmlFor='name'></label>\r\n              <input id='name' \r\n              type='text'\r\n              className={classes.userName}\r\n              placeholder='Enter Name'\r\n              ref={userName}\r\n              />\r\n              <label htmlFor='email'></label>\r\n              <input id='email' \r\n              type='email'\r\n              className={classes.email}\r\n              placeholder='Email address'\r\n              ref={userEmail}\r\n              \r\n            //   onBlur={emailVerify}\r\n              />\r\n              <label htmlFor='phone number'></label>\r\n              <input id='phone number' \r\n              type='number'\r\n              className={classes['phone-number']}\r\n              placeholder='Phone Number  080#########'\r\n              ref={userPhone}\r\n              />\r\n              <label htmlFor='create password'></label>\r\n              <input id='create password' \r\n              type='password'\r\n              className={classes.password}\r\n              placeholder='Create pasword'\r\n              ref={userPassword}\r\n              />\r\n              <label htmlFor='confirm password'></label>\r\n              <input id='confirm password' \r\n              type='password'\r\n              className={classes.password}\r\n              placeholder='Confirm password'\r\n              ref={confirmPassword}\r\n              />\r\n              <label htmlFor='referal code'></label>\r\n              <input id='referal code' \r\n              type='number'\r\n              className={classes['referal-code']}\r\n              placeholder='Referal code(Optional)'\r\n              />\r\n              <button type='submit'>Sign Up</button>\r\n           </form>\r\n\r\n           <footer className={classes['create-account-header-footer']}>\r\n                <p>Already have an account? <button onClick={loginButtonClickHandler}>Log In</button></p>\r\n\r\n                <p>\r\n                  By tapping Sign up, you agree to our <button>Terms & conditions</button> <br/>and <button>Privacy Policy</button>\r\n                </p>\r\n           </footer> </main> \r\n         </Fragment>\r\n  };\r\n  export default CreateAccount;\r\n","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Footer.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Header.js",["271","272","273"],[],"import { Fragment } from \"react\";\r\nimport classes from './Header.module.css';\r\nimport wavyHand from '../../assests/mdi_hand-wave-outline.png';\r\nimport hiddenEye from '../../assests/Eye\\,\\ Hidden.png';\r\nimport notificationBell from '../../assests/clarity_notification-outline-badged.png';\r\nconst Header = () => {\r\n    const weekDays = ['Monday', 'Tuesday', 'Wednessday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    const months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const date = {\r\n        currentBalance: 250000,\r\n        weekDay: weekDays[new Date().getDay()],\r\n        monthDay: new Date().getDate(),\r\n        month: months[new Date().getMonth()]\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <header className={classes['header-header']}>\r\n                <div className={classes['header-firstDiv']}>\r\n                    <p>Welcome back,</p> \r\n                    <p>West \r\n                    <img src={wavyHand} className={classes['header-wavyhand']}/>\r\n                    </p> \r\n                    <img src={notificationBell}  alt='notification'className={classes['header-bell']}/>\r\n                </div>\r\n            <div className={classes['header-secondDiv']}>\r\n                <p>Current balance</p>\r\n                <p> &#8358;{date.currentBalance}.00\r\n                <img src={hiddenEye} alt='A hidden eye' \r\n                className={classes['header-hidden-eye']} />\r\n                </p>\r\n                <p>{date.weekDay}, {date.monthDay}th {date.month}</p>\r\n            </div>\r\n            </header>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Header;\r\n","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Transaction.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Withdraw.js",["274"],[],"import { Fragment, useState, useRef } from 'react';\r\n\r\nimport Button from '../../UI/Button';\r\nimport Input from '../../UI/Input';\r\n\r\nimport close from '../../../assests/close buttom sheet modal icon.png';\r\nimport correct from '../../../assests/Group 13 Copy 2.png';\r\nimport classes from './Withdraw.module.css';\r\n\r\nconst Withdraw = props => {\r\n    const [validForm, setValidForm] = useState(false);\r\n    const [validAccNum, setValidAccNum] = useState(false);\r\n    const bank = useRef('');\r\n    const accNum = useRef('');\r\n    const amount = useRef('');\r\n    const remarks = useRef('');\r\n\r\n    const accNumValidation = () => {\r\n        const validAccNum = accNum.current.value.trim().length > 6;\r\n        setValidAccNum(validAccNum);\r\n    }\r\n\r\n    const formSubmitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        setValidForm(true);\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className={classes['withdraw-div']}>\r\n            <div className={classes['withdraw-1-div']}>\r\n                <div>\r\n                { !validForm && <p>Send Money</p>}\r\n                { validForm && <p>Withdraw</p>}\r\n                    <p>Transfer to Bank Account</p>\r\n                </div>\r\n                <p className={classes['withdraw-1-div-p']}\r\n                onClick={() => props.onClose(false)}\r\n                ><img src={close} alt='Close'/></p>\r\n            </div>\r\n            <div className={classes['withdraw-2-div']}>\r\n                <form onSubmit={formSubmitHandler}>\r\n                    <label htmlFor='bank'>Bank</label>\r\n                    <Input \r\n                    id='bank'\r\n                    type='text'\r\n                    placeholder='Select Bank'\r\n                    ref={bank}\r\n                    required\r\n                    />\r\n                    <label htmlFor='account number'>Account Number</label>\r\n                    <Input \r\n                    id='account number'\r\n                    type='text'\r\n                    placeholder='Enter account number'\r\n                    ref={accNum}\r\n                    onBlur={accNumValidation}\r\n                    required\r\n                    />\r\n                    {validAccNum && <p className={classes['withdraw-acc-num']}>\r\n                        <span><img src={correct}/></span> <span>Your Account Name</span>\r\n                    </p>}\r\n                    <label htmlFor='amount'>Amount</label>\r\n                    <Input \r\n                    id='amount'\r\n                    type='number'\r\n                    placeholder='&#8358; Enter Amount'\r\n                    ref={amount}\r\n                    required\r\n                    />\r\n                    <label htmlFor='remarks'>Remarks</label>\r\n                    <Input \r\n                    id='remarks'\r\n                    type='text'\r\n                    placeholder=\"What's this for (Optional)\"\r\n                    ref={remarks}\r\n                    />\r\n                    <Button type='submit' className={classes['withdraw-button']}>\r\n                        {!validForm && <p>Next</p>}\r\n                        {validForm && <p>Withdraw</p>}\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Withdraw;","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\HandlePayment.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\Full-Transaction-List\\FullTransactionList.js",["275"],[],"import { Fragment, useState, useContext } from 'react';\r\nimport { Transactions } from '../../../../App';\r\n\r\nimport back from '../../../../assests/left.png';\r\nimport credit from '../../../../assests/mdi_database-arrow-down-outline.png';\r\nimport debit from '../../../../assests/mdi_database-arrow-up-outline.png';\r\n\r\nimport classes from './FullTransactionList.module.css';\r\nconst FullTransactionList = props => {\r\n    const transactions = useContext(Transactions);\r\n    const [type, setType] = useState('all');\r\n    const [list, setList] = useState(transactions);\r\n\r\n    const filterTransctions = type => {\r\n        const filter = transactions.filter( transaction => {\r\n            if(transaction.type === type){\r\n                return true;\r\n            };\r\n            if(type === 'all'){\r\n                return true;\r\n            };\r\n        });\r\n        setList(filter);\r\n    }\r\n\r\n    const typeHandler = type => {\r\n        filterTransctions(type);\r\n        setType(type);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className={classes['fullTransaction-div']}>\r\n                <p onClick={() => props.onClose(false, 'home')}><img src={back} alt='back'/></p>\r\n                <div>\r\n                    <p>Transactions</p>\r\n                    <p>Transactions on your Alee wallet</p>\r\n                </div>\r\n            </div>\r\n            <nav className={classes['fullTransaction-nav']}>\r\n                <button onClick={() => typeHandler('all')} className={type === 'all'? classes['all-focused'] : ''}>All</button>\r\n                <button onClick={() => typeHandler('credit')} className={type === 'credit'? classes['credit-focused'] : ''}>Credit</button>\r\n                <button onClick={() => typeHandler('debit')} className={type === 'debit'? classes['debit-focused'] : ''}>Debit</button>\r\n            </nav>\r\n            <ul  className={classes['fullTransaction-ul']}>\r\n               {\r\n                  list.map( (transaction, id) => \r\n                     <li key={id}>\r\n                           <div className={classes['transactionList-main-li-div-1']}>\r\n                              <div className={classes['transactionList-main-li-div-1-1']}>\r\n                                 {transaction.type === 'credit' && <p><img src={credit} alt='credit symbol' width='30'/></p>}\r\n                                 {transaction.type === 'debit' && <p><img src={debit} alt='debit symbol' width='30'/></p>}\r\n                              </div>\r\n                              <div>\r\n                                 <p className={classes['transactionList-main-div-p']}>{transaction.name}</p>\r\n                                 <p>{transaction.bank}</p>\r\n                                 <p>{transaction.accountNumber}</p>\r\n                              </div>\r\n                           </div>\r\n                           <div className={classes['transactionList-main-li-div-2']}>\r\n                              <p className={classes['transactionList-main-div-p']}>{transaction.amount}</p>\r\n                              <p>{transaction.date}</p>\r\n                              <p>{transaction.time}</p>\r\n                           </div>\r\n                     </li>     \r\n                  )\r\n               }\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default FullTransactionList;","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\Login.js",["276"],[],"import { Fragment, useState } from \"react\";\r\nimport classes from './Login.module.css';\r\nconst Login = props => {\r\n    const accountCreateButtonClickHandler = () => {\r\n        props.onClickCreateAcc();\r\n    };\r\n    const loginHandler = event => {\r\n        event.preventDefault();\r\n\r\n        localStorage.setItem('loggedIn', 1);\r\n        alert(\"Your logged in status has been saved. You won't need to log when the page refreshes\");\r\n        props.onLogin();\r\n    };\r\n    return <Fragment>\r\n       <main>\r\n        <header className={classes['login-header']}>\r\n            <h1>Log In</h1>\r\n            <p>Payment on the go!</p>\r\n        </header>\r\n        <form onSubmit={loginHandler} className={classes['login-form']}>\r\n            <label htmlFor=\"email\"></label>\r\n            <input \r\n            id='email'\r\n            type='email' \r\n            placeholder=\"Email address\"\r\n            className={classes['login-email']}\r\n            required\r\n            />\r\n            <label htmlFor=\"password\"></label>\r\n            <input \r\n            id='password'\r\n            type='password' \r\n            placeholder=\"password\"\r\n            className={classes['login-password']}\r\n            required\r\n            />\r\n            <p>Forgot pasword?</p>\r\n            <button type=\"submit\">Log In</button>\r\n        </form>\r\n        <footer className={classes['login-footer']}>\r\n        <p>Don't have an account? <button onClick={accountCreateButtonClickHandler}>Create Account</button></p>\r\n        <p>\r\n             By tapping Sign up, you agree to our <button>Terms & conditions</button> <br/>and <button>Privacy Policy</button>\r\n        </p>\r\n        </footer>\r\n        </main>\r\n    </Fragment>\r\n};\r\nexport default Login;","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\TransactionList.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Input.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Button.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\PaymentDetails.js",["277"],[],"import { useState, useEffect, Fragment } from 'react';\r\n\r\nimport Button from '../../../UI/Button';\r\nimport Modal from '../../../UI/Modals/Modal';\r\nimport ModalResult from './PaymentResult';\r\nimport CancelModal from '../paymentHandler/ModalPaymentDetails';\r\n\r\nimport copy2 from '../../../../assests/file_copy-1.png';\r\nimport whatsapp from '../../../../assests/logos_whatsapp-icon.png';\r\nimport telegram from '../../../../assests/logos_telegram.png';\r\nimport sms from '../../../../assests/sms.png';\r\n\r\nimport copy from '../../../../assests/file_copy.png';\r\nimport close from '../../../../assests/close buttom sheet modal icon.png';\r\nimport frame from '../../../../assests/Frame 1000000960.png';\r\n\r\n\r\nimport classes from './PaymentDetails.module.css';\r\nconst PaymentDetails = props => {\r\n    const [showResultModal, setShowResultModal] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [counter, setCounter ] = useState(10);\r\n    const [resultBool, setResultBool] = useState(false);\r\n    const [showCancelModal, setShowCancelModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const interval = setTimeout(() => {\r\n            if(counter === 0) {\r\n                const bool = Math.floor(Math.random() * 2);\r\n                if(bool === 0){\r\n                    setResultBool(false);\r\n                } else {\r\n                    setResultBool(true);\r\n                }\r\n                setShowResultModal(true);\r\n            }\r\n            setCounter(prevCount => {\r\n                if(showCancelModal === true){\r\n                    return prevCount;\r\n                }\r\n                if(prevCount === 0) {\r\n                    return prevCount\r\n                } else {\r\n                    return prevCount - 1\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearTimeout(interval);\r\n        }\r\n    }, [counter]);\r\n\r\n    const shareButtonHandler = bool => {\r\n        setShowModal(bool);\r\n    }\r\n    const retryHandler = () => {\r\n        setCounter(10);\r\n        setShowResultModal(false);\r\n    }\r\n    const goDashBoardHandler = () => {\r\n        props.onClose();\r\n    }\r\n    const cancelClickHandler = bool => {\r\n        setCounter(prevCount => prevCount - 1);\r\n        setShowCancelModal(bool);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {showCancelModal && <CancelModal onClose={cancelClickHandler}\r\n             onCancel={props.onCancel} \r\n             className={classes['payment-details-modal']}/>}\r\n            {showResultModal && !showCancelModal && <ModalResult bool={resultBool} onClose={retryHandler} onClickDashBoard={goDashBoardHandler}/>}\r\n            {showModal && <Modal header='Share' onClose={shareButtonHandler} className={classes['payment-details-modal']} >\r\n            <div className={classes['payment-modal']}>\r\n                <div className={classes['payment-modal-div']}>\r\n                    <p><img src={copy2} alt='copy'/></p>\r\n                    <p>Copy</p>\r\n                </div>\r\n                <div className={classes['payment-modal-div']}>\r\n                    <p><img src={whatsapp} alt='whatsapp'/></p>\r\n                    <p>Whatsapp</p>\r\n                </div>\r\n                <div className={classes['payment-modal-div']}>\r\n                    <p><img src={telegram} alt='telegram'/></p>\r\n                    <p>Telegram</p>\r\n                </div>\r\n                <div className={classes['payment-modal-div']}>\r\n                <p><img src={sms} alt='sms'/></p>\r\n                    <p>DM</p>\r\n                </div>\r\n            </div>\r\n            </Modal>}\r\n            <div className={classes['payment-div']}>\r\n                <div className={classes['payment-1-div']}>\r\n                    <div>\r\n                        <p>Payment details</p>\r\n                        <p>Make payment to the account details below</p>\r\n                    </div>\r\n                    <p className={classes['payment-1-div-p']}\r\n                    onClick={() => props.showPayment(false)}\r\n                    ><img src={close} alt='Close'/></p>\r\n                </div>\r\n                <div className={classes['payment-2-div']}>\r\n                    <div>\r\n                        <p>Bank</p>\r\n                        <p>First Bank</p>\r\n                    </div>\r\n                    <div>\r\n                        <span>\r\n                            <p>Account Number </p>\r\n                            <p>3146512732</p>\r\n                        </span>\r\n                        <p className={classes['payment-img-p']}>Copy\r\n                            <img src={copy} alt='Copy'/>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Account Name</p>\r\n                        <p>Thompson Onuoha Uchenna</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Amount</p>\r\n                        <p>&#8358; 5000.00</p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes['payment-3-div']}>\r\n                    <p><img src={frame} alt='frame'/></p>\r\n                    <p>Account expires in<span>{counter}:00</span></p>\r\n                    { props.type === 'recieve' &&   <Button onClick={() => shareButtonHandler(true)} className={classes['payment-details-button']}>\r\n                        Share\r\n                    </Button> }\r\n                    { props.type === 'make' &&   <Button onClick={() => goDashBoardHandler()} className={classes['payment-details-button']}>\r\n                        I've completed the payment\r\n                    </Button> }\r\n                    <button className={classes['payment-button']} onClick={() => cancelClickHandler(true)}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default PaymentDetails;","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\ModalPaymentDetails.js",["278"],[],"import classes from './ModalPaymentDetails.module.css';\r\nimport alert from '../../../../assests/alert-triangle.png';\r\n\r\nimport Modal from '../../../UI/Modals/Modal';\r\nconst ModalPaymentDetails = props => {\r\n    return(\r\n       <Modal className={classes['modal-payment-details']}>\r\n            <div className={classes['modal-payment-details-div']}>\r\n                <p>\r\n                    <span>\r\n                        <img src={alert}/>\r\n                    </span>\r\n                    <span>\r\n                        Cancel transaction\r\n                    </span>\r\n                </p>\r\n                <p>\r\n                    <span>Do you want to cancel this</span>\r\n                    <span>transaction</span>\r\n                </p>\r\n                <div><button onClick={() => props.onClose(false)}>\r\n                    No, continue\r\n                </button>\r\n                <button  onClick={() => props.onCancel(false)}>\r\n                    Yes, Cancel\r\n                </button></div>\r\n            </div>\r\n       </Modal>\r\n    );\r\n};\r\nexport default ModalPaymentDetails;","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Transaction\\paymentHandler\\PaymentResult.js",["279"],[],"import classes from './PaymentResult.module.css';\r\nimport Modal from '../../../UI/Modals/Modal';\r\nimport Button from '../../../UI/Button';\r\n\r\nimport failed from '../../../../assests/Frame 1000001594.png';\r\nimport success from '../../../../assests/Wallet_Flatline 2.png';\r\n\r\nimport close from '../../../../assests/close buttom sheet modal icon.png';\r\nconst PaymentResult = props => {\r\n    return ( \r\n        <Modal className={classes['payment-result-modal']}>\r\n            <div className={classes['payment-result-modal']}>\r\n            {!props.bool && <p onClick={() => props.onClose()}><img src={close} alt='Close'/></p>}\r\n            {props.bool && <p></p>}\r\n            <p>\r\n                <img src={success} alt='Succesfull!'/>\r\n                { !props.bool && <img src={failed} />}\r\n            </p>\r\n            { props.bool && <p>Payment Recieved!</p>}\r\n            {!props.bool && <p>Transaction Timeout!</p>}\r\n            { props.bool && <p>\r\n                The sum of &#8358;50,000 was succesful\r\n                <span>paid into your account</span>\r\n            </p>}\r\n            {!props.bool && <p>\r\n                Payment transaction was not \r\n                <span>sucessful. Please try again</span>     \r\n            </p>}\r\n            <Button \r\n            className={`${classes['payment-result-modal-button']} \r\n            ${!props.bool && classes.failed}`}\r\n            onClick = {!props.bool? () => props.onClose() : () => props.onClickDashBoard()}\r\n            >\r\n               { props.bool && <p>Go to dashboard</p>}\r\n               {!props.bool && <p>Retry</p>}\r\n            </Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default PaymentResult;\r\n","C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Modals\\Modal.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\UI\\Modals\\AddTransactionModal.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\main-page\\Profile.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\parkPayChallenge\\src\\components\\loginAndCreateAccount\\LoginAndCreateAcc.js",["280","281"],[],"import { useEffect, useState, Fragment } from 'react'\r\nimport CreateAccount from './CreateAccount';\r\nimport Login from './Login';\r\nimport classes from './LoginAndCreateAcc.module.css';\r\nconst FirstPage = props => {\r\n    const [creatingAccount, setCreatingAccount] = useState(true);\r\n    const loginClickHandler = () => {\r\n        setCreatingAccount(false);\r\n    }\r\n    const accountCreateHandler = () => {\r\n        setCreatingAccount(true);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {creatingAccount && <div>\r\n                  <CreateAccount onLogin={props.onLogin} onClickLogIn={loginClickHandler}/>\r\n            </div> }\r\n            {!creatingAccount && <div>\r\n                  <Login onLogin={props.onLogin} onClickCreateAcc={accountCreateHandler}/>\r\n            </div> }\r\n        </Fragment>\r\n    )\r\n};\r\nexport default FirstPage;","C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\index.js",[],[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\App.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Shop\\Products.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\Cart.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Layout\\Layout.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Shop\\ProductItem.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\CartItem.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Layout\\MainHeader.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\Cart\\CartButton.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\index.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\components\\UI\\Notification.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\cart-actions.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\cart-slice.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\advanced-redux\\src\\store\\ui-slice.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\App.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\HomePage.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EventsPage.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EventDetailPage.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\NewEventPage.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\pages\\EditEventPage.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\MainNavigation.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\RootLayout.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsNavigation.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsRoot.js",[],[],"C:\\Users\\Prince\\Desktop\\myReactProjects\\react-router-project\\frontend\\src\\components\\EventsList.js",[],[],{"ruleId":"282","severity":1,"message":"283","line":1,"column":30,"nodeType":"284","messageId":"285","endLine":1,"endColumn":40},{"ruleId":"282","severity":1,"message":"286","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":13},{"ruleId":"282","severity":1,"message":"287","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":12},{"ruleId":"282","severity":1,"message":"288","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":13},{"ruleId":"282","severity":1,"message":"289","line":7,"column":8,"nodeType":"284","messageId":"285","endLine":7,"endColumn":16},{"ruleId":"282","severity":1,"message":"290","line":8,"column":8,"nodeType":"284","messageId":"285","endLine":8,"endColumn":15},{"ruleId":"282","severity":1,"message":"291","line":11,"column":11,"nodeType":"284","messageId":"285","endLine":11,"endColumn":21},{"ruleId":"282","severity":1,"message":"292","line":11,"column":23,"nodeType":"284","messageId":"285","endLine":11,"endColumn":36},{"ruleId":"282","severity":1,"message":"293","line":55,"column":7,"nodeType":"284","messageId":"285","endLine":55,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":4,"column":41,"nodeType":"296","messageId":"297","endLine":4,"endColumn":42,"suggestions":"298"},{"ruleId":"294","severity":1,"message":"299","line":4,"column":43,"nodeType":"296","messageId":"297","endLine":4,"endColumn":44,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":21,"column":21,"nodeType":"303","endLine":21,"endColumn":81},{"ruleId":"301","severity":1,"message":"302","line":61,"column":31,"nodeType":"303","endLine":61,"endColumn":51},{"ruleId":"304","severity":1,"message":"305","line":15,"column":57,"nodeType":"306","messageId":"307","endLine":15,"endColumn":59},{"ruleId":"282","severity":1,"message":"308","line":1,"column":20,"nodeType":"284","messageId":"285","endLine":1,"endColumn":28},{"ruleId":"309","severity":1,"message":"310","line":52,"column":8,"nodeType":"311","endLine":52,"endColumn":17,"suggestions":"312"},{"ruleId":"301","severity":1,"message":"302","line":11,"column":25,"nodeType":"303","endLine":11,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":17,"column":34,"nodeType":"303","endLine":17,"endColumn":54},{"ruleId":"282","severity":1,"message":"313","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":19},{"ruleId":"282","severity":1,"message":"314","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":15},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'email' is defined but never used.","'hide' is defined but never used.","'phone' is defined but never used.","'password' is defined but never used.","'referal' is defined but never used.","'EmailValid' is assigned a value but never used.","'setEmailValid' is assigned a value but never used.","'emailVerify' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["315","316"],"Unnecessary escape character: \\ .",["317","318"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showCancelModal'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCounter' needs the current value of 'showCancelModal'.","ArrayExpression",["319"],"'useEffect' is defined but never used.","'classes' is defined but never used.",{"messageId":"320","fix":"321","desc":"322"},{"messageId":"323","fix":"324","desc":"325"},{"messageId":"320","fix":"326","desc":"322"},{"messageId":"323","fix":"327","desc":"325"},{"desc":"328","fix":"329"},"removeEscape",{"range":"330","text":"331"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"332","text":"333"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"334","text":"331"},{"range":"335","text":"333"},"Update the dependencies array to be: [counter, showCancelModal]",{"range":"336","text":"337"},[184,185],"",[184,184],"\\",[186,187],[186,186],[1895,1904],"[counter, showCancelModal]"]